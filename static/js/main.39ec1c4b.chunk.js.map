{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/Field/Field.jsx","App.jsx","index.jsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","Field","filterBy","query","setQuery","htmlFor","type","id","placeholder","value","newQuery","onChange","event","currentTarget","App","useState","visibleMovies","preparedMovies","toLowerCase","trim","filter","includes","getPreparedFilm","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"mSAEaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,kBAIhC,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,4BCvBKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,c,OCNfC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,SAApB,OACnB,sBAAKf,UAAU,QAAf,UAEE,uBACEgB,QAAQ,eACRhB,UAAU,QAFZ,0BAOA,qBAAKA,UAAU,UAAf,SACE,uBACEiB,KAAK,OACLC,GAAG,eACHlB,UAAU,QACVmB,YAAY,mBACZC,MAAON,EACPD,SAAU,SAAAQ,GAAQ,OAAIN,EAASM,IAC/BC,SAAU,SAACC,GACTV,EAASU,EAAMC,cAAcJ,gBCIhC,IAAMK,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAcC,EAAd,KAEMY,EAnBR,SAAyBlB,EAAzB,GAA6C,IAAVK,EAAS,EAATA,MAC7Bc,EAAc,YAAOnB,GACnBY,EAAWP,EAAMe,cAAcC,OAWrC,OATIT,IACFO,EAAiBA,EACdG,QACC,SAAAhC,GAAK,OAAIA,EAAMM,YACZwB,cAAcG,SAASX,IACvBtB,EAAMK,MAAMyB,cAAcG,SAASX,OAIrCO,EAMeK,CAAgBC,EAAkB,CAAEpB,UAE1D,OACE,sBAAKd,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CACEc,MAAOA,EACPD,SAAU,SAAAQ,GAAQ,OAAIN,EAASM,QAInC,cAAC,EAAD,CAAYZ,OAAQkB,OAGtB,qBAAK3B,UAAU,UAAf,mCCrCNmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.39ec1c4b.chunk.js","sourcesContent":["import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","export const Field = ({ filterBy, query, setQuery }) => (\n  <div className=\"field\">\n    {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n    <label\n      htmlFor=\"search-query\"\n      className=\"label\"\n    >\n      Search movie\n    </label>\n\n    <div className=\"control\">\n      <input\n        type=\"text\"\n        id=\"search-query\"\n        className=\"input\"\n        placeholder=\"Type search word\"\n        value={query}\n        filterBy={newQuery => setQuery(newQuery)}\n        onChange={(event) => {\n          filterBy(event.currentTarget.value);\n        }}\n      />\n    </div>\n  </div>\n);\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { Field } from './components/Field/Field';\n\nfunction getPreparedFilm(movies, { query }) {\n  let preparedMovies = [...movies];\n  const newQuery = query.toLowerCase().trim();\n\n  if (newQuery) {\n    preparedMovies = preparedMovies\n      .filter(\n        movie => movie.description\n          .toLowerCase().includes(newQuery)\n        || movie.title.toLowerCase().includes(newQuery),\n      );\n  }\n\n  return preparedMovies;\n}\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n\n  const visibleMovies = getPreparedFilm(moviesFromServer, { query });\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <Field\n            query={query}\n            filterBy={newQuery => setQuery(newQuery)}\n          />\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}